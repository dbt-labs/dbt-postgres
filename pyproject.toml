[project]
dynamic = ["version"]
name = "dbt-postgres"
description = "The set of adapter protocols and base functionality that supports integration with dbt-core"
readme = "README.md"
keywords = ["dbt", "adapter", "adapters", "database", "elt", "dbt-core", "dbt Core", "dbt Cloud", "dbt Labs", "postgres"]
requires-python = ">=3.8.0"
authors = [
    { name = "dbt Labs", email = "info@dbtlabs.com" },
]
maintainers = [
    { name = "dbt Labs", email = "info@dbtlabs.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "psycopg2-binary>=2.9,<3.0",
    "dbt-adapters>=0.1.0a1,<2.0",
    # add dbt-core to ensure backwards compatibility of installation, this is not a functional dependency
    "dbt-core>=1.8.0a1",
    # installed via dbt-adapters but used directly
    "dbt-common>=0.1.0a1,<2.0",
    "agate>=1.0,<2.0",
]

[project.urls]
Homepage = "https://github.com/dbt-labs/dbt-postgres"
Documentation = "https://docs.getdbt.com"
Repository = "https://github.com/dbt-labs/dbt-postgres.git"
Issues = "https://github.com/dbt-labs/dbt-postgres/issues"
Changelog = "https://github.com/dbt-labs/dbt-postgres/blob/main/CHANGELOG.md"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = ["dbt"]

[tool.hatch.build.targets.wheel]
packages = ["dbt"]

[tool.hatch.version]
path = "dbt/adapters/postgres/__version__.py"

[tool.hatch.envs.default]
dependencies = [
    "dbt-adapters @ git+https://github.com/dbt-labs/dbt-adapters.git",
    "dbt-common @ git+https://github.com/dbt-labs/dbt-common.git",
    'pre-commit==3.7.0;python_version>="3.9"',
    'pre-commit==3.5.0;python_version=="3.8"',
]
[tool.hatch.envs.default.scripts]
dev = "pre-commit install"
code-quality = "pre-commit run --all-files"

[tool.hatch.envs.unit-tests]
dependencies = [
    "dbt-adapters @ git+https://github.com/dbt-labs/dbt-adapters.git",
    "dbt-common @ git+https://github.com/dbt-labs/dbt-common.git",
    "dbt-core @ git+https://github.com/dbt-labs/dbt-core.git#subdirectory=core",
    "freezegun",
    "pytest",
    "pytest-dotenv",
    "pytest-mock",
    "pytest-xdist",
]
[tool.hatch.envs.unit-tests.scripts]
all = "python -m pytest {args:tests/unit}"

[tool.hatch.envs.integration-tests]
template = "unit-tests"
extra-dependencies = [
    "dbt-tests-adapter @ git+https://github.com/dbt-labs/dbt-adapters.git#subdirectory=dbt-tests-adapter",
]
[tool.hatch.envs.integration-tests.env-vars]
DBT_TEST_USER_1 = "dbt_test_user_1"
DBT_TEST_USER_2 = "dbt_test_user_2"
DBT_TEST_USER_3 = "dbt_test_user_3"
[tool.hatch.envs.integration-tests.scripts]
all = "python -m pytest {args:tests/functional}"

[tool.hatch.envs.build]
detached = true
dependencies = [
    "wheel",
    "twine",
    "check-wheel-contents",
]
[tool.hatch.envs.build.scripts]
check-all = [
    "- check-wheel",
    "- check-sdist",
]
check-wheel = [
    "twine check dist/*",
    "find ./dist/dbt_postgres-*.whl -maxdepth 1 -type f | xargs python -m pip install --force-reinstall --find-links=dist/",
    "pip freeze | grep dbt-postgres",
]
check-sdist = [
    "check-wheel-contents dist/*.whl --ignore W007,W008",
    "find ./dist/dbt_postgres-*.gz -maxdepth 1 -type f | xargs python -m pip install --force-reinstall --find-links=dist/",
    "pip freeze | grep dbt-postgres",
]

[tool.pytest]
env_files = ["test.env"]
testpaths = [
    "tests/functional",
    "tests/unit",
]
