name: Integration Tests

on:
  push:
    branches:
      - "main"
      - "*.latest"
  pull_request:
  workflow_dispatch:
    inputs:
      dbt_adapters_branch:
        description: "The branch of dbt-adapters to use"
        type: string
        required: false
        default: "main"
      core_branch:
        description: "The branch of dbt-core to use"
        type: string
        required: false
        default: "main"
  workflow_call:
    inputs:
      dbt_adapters_branch:
        description: "The branch of dbt-adapters to use"
        type: string
        required: false
        default: "main"
      core_branch:
        description: "The branch of dbt-core to use"
        type: string
        required: false
        default: "main"

permissions: read-all

# will cancel previous workflows triggered by the same event and for the same ref for PRs or same SHA otherwise
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ contains(github.event_name, 'pull_request') && github.event.pull_request.head.ref || github.sha }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Update Adapters and Core branches
        if: ${{ github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch'}}
        run: |
          ./.github/scripts/update_dev_packages.sh \
            ${{ inputs.dbt_adapters_branch }} \
            ${{ inputs.core_branch }}

      - name: Setup postgres
        run: psql -f ./scripts/setup_test_database.sql
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: postgres

      - name: Setup `hatch`
        uses: dbt-labs/dbt-adapters/.github/actions/setup-hatch@main
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run integration tests
        run: hatch run integration-tests:all
        env:
          POSTGRES_TEST_HOST: localhost
          POSTGRES_TEST_PORT: 5432
          POSTGRES_TEST_USER: root
          POSTGRES_TEST_PASS: password
          POSTGRES_TEST_DATABASE: dbt
          POSTGRES_TEST_THREADS: 4

  psycopg2-check:
    name: "Test psycopg2 build version"
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-24.04
          - macos-12
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v4

      - name: "Test psycopg2 name - default"
        run: |
          hatch env prune
          PSYCOPG2_NAME=$(hatch run pip show psycopg2 || pip show psycopg2-binary | grep Name | cut -d " " -f 2)

          if [[ "$PSYCOPG2_NAME" != "$PSYCOPG2_EXPECTED_NAME" ]]; then
            exit 1
          fi
        env:
          PSYCOPG2_EXPECTED_NAME: psycopg2-binary

      - name: "Test psycopg2 name - invalid override"
        run: |
          hatch env prune
          PSYCOPG2_NAME=$(hatch run pip show psycopg2 || pip show psycopg2-binary | grep Name | cut -d " " -f 2)

          if [[ "$PSYCOPG2_NAME" != "$PSYCOPG2_EXPECTED_NAME" ]]; then
            exit 1
          fi
        env:
          DBT_PSYCOPG2_NAME: rubber-baby-buggy-bumpers
          PSYCOPG2_EXPECTED_NAME: psycopg2-binary

      - name: "Test psycopg2 name - override"
        run: |
          hatch env prune
          PSYCOPG2_NAME=$(hatch run pip show psycopg2 || pip show psycopg2-binary | grep Name | cut -d " " -f 2)

          if [[ "$PSYCOPG2_NAME" != "$PSYCOPG2_EXPECTED_NAME" ]]; then
            exit 1
          fi
        env:
          DBT_PSYCOPG2_NAME: psycopg2
          PSYCOPG2_EXPECTED_NAME: psycopg2-binary  # this is not yet implemented
