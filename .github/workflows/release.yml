name: Release

on:
  workflow_dispatch:
    inputs:
      deploy-to:
        type: choice
        description: Choose where to publish (test/prod)
        options:
        - prod
        - test
        default: prod

permissions: read-all

# will cancel previous workflows triggered by the same event and for the same ref for PRs or same SHA otherwise
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ contains(github.event_name, 'pull_request') && github.event.pull_request.head.ref || github.sha }}-${{ inputs.deploy-to }}
  cancel-in-progress: true

jobs:
  release:
    name: PyPI - ${{ inputs.deploy-to }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.deploy-to }}
      url: ${{ vars.PYPI_PROJECT_URL }}
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    outputs:
      version: ${{ steps.release-inputs.outputs.version }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup `hatch`
        uses: dbt-labs/dbt-adapters/.github/actions/setup-hatch@main

      - name: Inputs
        id: release-inputs
        run: |
          version=$(hatch version)
          archive_name=dbt-postgres-$version-${{ inputs.deploy-to }}
          echo "archive-name=$archive_name" >> $GITHUB_OUTPUT
          echo "version=version" >> $GITHUB_OUTPUT

      - name: Build `dbt-postgres`
        uses: dbt-labs/dbt-adapters/.github/actions/build-hatch@main
        with:
          archive-name: ${{ steps.release-inputs.outputs.archive-name }}

      - name: Publish to PyPI
        uses: dbt-labs/dbt-adapters/.github/actions/publish-pypi@main
        with:
          pypi-repository-url: ${{ vars.PYPI_REPOSITORY_URL }}
          archive-name: ${{ steps.release-inputs.outputs.archive-name }}

  docker-release:
    name: "Docker Release"
    needs: [release]
    if: ${{ !failure() && !cancelled() }}
    permissions:
      packages: write
    uses: dbt-labs/dbt-release/.github/workflows/release-docker.yml@docker-release
    with:
      version_number: ${{ needs.release.outputs.version }}
      test_run: ${{ inputs.deploy-to == 'test' }}
