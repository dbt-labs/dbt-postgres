name: Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch to release from"
        type: string
        default: "main"
      version:
        description: "The version to release"
        required: true
        type: string
      deploy-to:
        description: "Deploy to test or prod"
        type: choice
        options:
        - prod
        - test
        default: prod
      sha:
        description: "The last commit sha in the release"
        type: string
        required: true

permissions:
  contents: write # this is the permission that allows creating a new release

# will cancel previous workflows triggered by the same event and for the same ref for PRs or same SHA otherwise
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ contains(github.event_name, 'pull_request') && github.event.pull_request.head.ref || github.sha }}-${{ inputs.deploy-to }}
  cancel-in-progress: true

jobs:
  release-prep:
    name: "Release prep: generate changelog, bump version"
    uses: ./github/workflow/release_prep_hatch.yml
    with:
      branch: ${{ inputs.branch }}
      version: ${{ inputs.version }}
      deploy-to: ${{ inputs.deploy-to }}

  build-release:
    name: "Build release"
    needs: release-prep
    runs-on: ubuntu-latest
    outputs:
      archive-name: ${{ steps.archive.outputs.name }}
    steps:
      - name: "Checkout ${{ github.repository }}@${{ inputs.branch }}"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          persist-credentials: false

      - name: "Setup `hatch`"
        uses: dbt-labs/dbt-adapters/.github/actions/setup-hatch@main

      - name: "Set archive name"
        id: archive
        run: |
          archive_name=${{ github.repository }}-${{ inputs.version }}-${{ inputs.deploy-to }}
          echo "name=$archive_name" >> $GITHUB_OUTPUT

      - name: "Build ${{ github.repository }}"
        uses: dbt-labs/dbt-adapters/.github/actions/build-hatch@main
        with:
          archive-name: ${{ steps.archive.outputs.name }}

  pypi-release:
    name: "PyPI release"
    runs-on: ubuntu-latest
    needs: build-release
    environment:
      name: ${{ inputs.deploy-to }}
      url: ${{ vars.PYPI_PROJECT_URL }}
    permissions:
      id-token: write  # this permission is required for trusted publishing
    steps:
      - name: "Publish to PyPI"
        uses: dbt-labs/dbt-adapters/.github/actions/publish-pypi@main
        with:
          pypi-repository-url: ${{ vars.PYPI_REPOSITORY_URL }}
          archive-name: ${{ needs.build-release.outputs.archive-name }}

  github-release:
    name: "GitHub release"
    needs:
      - build-release
      - release-prep
    uses: dbt-labs/dbt-adapters/.github/workflows/github-release.yml@main
    with:
      sha: ${{ needs.release-prep.outputs.release-sha }}
      version_number: ${{ inputs.version }}
      changelog_path: ${{ needs.release-prep.outputs.changelog-path }}
      test_run: ${{ inputs.deploy-to == 'test' }}
      archive_name: ${{ needs.build-release.outputs.archive-name }}

  docker-release:
    name: "Docker release"
    needs: github-release  # docker relies on the published tag from github-release
    permissions:
      packages: write  # this permission is required for publishing to GHCR
    uses: dbt-labs/dbt-release/.github/workflows/release-docker.yml@main
    with:
      version_number: ${{ inputs.version }}
      test_run: ${{ inputs.deploy-to == 'test' }}
